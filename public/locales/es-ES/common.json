{
    "title_page": "Portafolio",
    "projects_": "Proyectos",
    "about": "Sobre mí",
    "tests": "Pruebas técnicas",
    "download_resume": "Descargar currículum",
    "title_hero_section": "¡Desarrollador web!",
    "phrases_hero_section": [
        "Transformando ideas en código 💡",
        "Soluciones eficientes 🧠"
    ],
    "about_me": "Soy desarrollador con 5 años de experiencia en frontend y backend, construyendo aplicaciones escalables y de alto rendimiento. A lo largo de los años, he trabajado en proyectos que me han permitido crecer, adaptarme y perfeccionar mi forma de desarrollar software.",
    "about_me_part2": "Me gusta enfrentar desafíos, aprender nuevas tecnologías y mejorar constantemente. Disfruto encontrar soluciones adaptadas a cada necesidad, buscando siempre la mejor forma de abordar cada proyecto.",
    "projects": {
        "title": "Proyectos",
        "modal_title": "Detalles del Proyecto",
        "modal_technologies": "Tecnologías",
        "modal_contributions": "Mi contribución",
        "inventory": {
            "title": "Sistema de Gestión de Inventarios",
            "description": "Una plataforma versátil y eficiente para gestionar inventarios y préstamos de equipos o herramientas en una amplia gama de industrias, incluyendo retail, logística, manufactura, salud y educación.",
            "cover": "/assets/inventory-cover.webp",
            "technologies": [
                "React / Redux",
                "HTML / CSS / TypeScript",
                "NestJS",
                "SEO"
            ],
            "contributions": [
                "Desarrollo de componentes reutilizables con React y Redux.",
                "Implementación de estilos con CSS y TypeScript.",
                "Optimización de SEO y rendimiento.",
                "Integración con API REST usando NestJS."
            ],
            "images": [
                "/assets/inventory-project/inventory-1.webp",
                "/assets/inventory-project/inventory-1.webp"
            ],
            "projectLink": "https://proyecto1.com",
            "nameButton": "Ver Proyecto"
        },
        "sirenagest": {
            "title": "SirenaGest",
            "description": "SIRENAGEST fase 3 es el Sistema de Registro Nacional de Gestantes del Ministerio de Salud de Colombia. Permite un seguimiento personalizado de gestantes, incluidas migrantes, para reducir la mortalidad materna.",
            "cover": "/assets/sirenagest-cover.webp",
            "technologies": [
                "Vue 3 / Element Plus / Pinia",
                "HTML / CSS",
                "Vue Router / Lazy Loading / Axios",
                "Vue Test Utils",
                ".Net Backend / ADO.NET / Microservicios",
                "SQL Server"
            ],
            "contributions": [
                "Maquetación avanzada con HTML y CSS puro, asegurando accesibilidad y estructura semántica.",
                "Desarrollo de pantallas interactivas en Vue 3 con Vue Router.",
                "Implementación de Lazy Loading para optimizar el rendimiento.",
                "Creación de una tabla dinámica altamente personalizada utilizando CSS Grid.",
                "Implementación de formularios complejos con validaciones avanzadas.",
                "Desarrollo de interceptores con Axios para la gestión centralizada de peticiones HTTP.",
                "Protección de rutas y gestión de autenticación dentro de la aplicación.",
                "Consumo de APIs y manejo eficiente de respuestas en frontend.",
                "Diseño y desarrollo de Responsive Design adaptado a múltiples dispositivos (sin Mobile First).",
                "Adecuación de funcionalidades y migración de estado de Vuex a Pinia.",
                "Resolución de bugs heredados de fases anteriores del proyecto.",
                "Implementación de procedimientos almacenados en SQL Server para optimizar consultas de base de datos.",
                "Participación activa en la recolección de requerimientos con el equipo funcional.",
                "Reuniones semanales con stakeholders para validar avances y ajustar funcionalidades."
            ],
            "images": [
                "/assets/sirenagest-project/sirenagest-1.webp",
                "/assets/sirenagest-project/sirenagest-2.webp",
                "/assets/sirenagest-project/sirenagest-3.webp",
                "/assets/sirenagest-project/sirenagest-4.webp",
                "/assets/sirenagest-project/sirenagest-5.webp",
                "/assets/sirenagest-project/sirenagest-6.webp",
                "/assets/sirenagest-project/sirenagest-7.webp"
            ],
            "projectLink": "https://web.sispropreprod.gov.co/cohortegestantes/frontend/",
            "nameButton": "Visitar Sitio"
        },
        "shareholders": {
            "title": "Sistema de Gestión de Accionistas",
            "description": "Una plataforma integral para la gestión de accionistas, títulos valores y votaciones en tiempo real. Incluye módulos de usuarios, administración de asambleas, reportes personalizados y un sistema financiero avanzado.",
            "cover": "/assets/eepb-cover.jpeg",
            "technologies": [
                "Angular v.16 / Angular Material / NGRX",
                "Tailwind CSS / CSS",
                "Chart.js",
                "Angular CDK (Component Dev Kit)",
                "PDFMake",
                "Jasmine & Karma",
                "Spring Boot Backend / JPA / Spring Security JWT",
                "WebSockets",
                "PostgreSQL"
            ],
            "contributions": [
                "Desarrollo de una interfaz dinámica con Angular 16, Angular Material y Tailwind CSS.",
                "Implementación de un sistema de votación en tiempo real con WebSockets.",
                "Gestión de estado optimizada con NGRX.",
                "Integración de gráficos interactivos con Chart.js.",
                "Desarrollo de módulos de administración de títulos y reportes personalizados.",
                "Generación de documentos en PDF con PDFMake.",
                "Autenticación segura con JWT y Spring Security.",
                "Pruebas unitarias y de integración con Jasmine y Karma.",
                "Implementación de un backend escalable con Spring Boot y PostgreSQL."
            ],
            "images": [
                "assets/eepb-project/eepb-1.webp",
                "assets/eepb-project/eepb-2.webp",
                "assets/eepb-project/eepb-3.webp",
                "assets/eepb-project/eepb-4.webp",
                "assets/eepb-project/eepb-5.webp",
                "assets/eepb-project/eepb-6.webp",
                "assets/eepb-project/eepb-7.webp",
                "assets/eepb-project/eepb-8.webp",
                "assets/eepb-project/eepb-9.webp",
                "assets/eepb-project/eepb-10.webp",
                "assets/eepb-project/eepb-11.webp"
            ],
            "projectLink": "https://eebpsa.com.co/",
            "nameButton": "Acceder a la Intranet"
        },
        "fastmeals": {
            "title": "Comidas Rápidas",
            "description": "Una plataforma web rápida y moderna creada con Astro, diseñada para un negocio local de comidas rápidas en Colombia. Incluye autenticación con Firebase, gestión de pedidos y una interfaz totalmente optimizada con Astro Actions para funcionalidades dinámicas.",
            "cover": "/assets/fastmeals-cover.webp",
            "technologies": [
                "Astro (Última versión)",
                "Tailwind CSS",
                "Firebase (Autenticación y Base de Datos)",
                "Netlify (Despliegue)",
                "Astro Actions (Funciones Serverless)"
            ],
            "contributions": [
                "Desarrollé un sitio de alto rendimiento con Astro.",
                "Implementé autenticación y gestión de usuarios con Firebase.",
                "Integré Astro Actions para funcionalidades serverless sin problemas.",
                "Diseñé una UI responsiva y accesible con Tailwind CSS.",
                "Construí formularios dinámicos para interacciones y procesamiento de pedidos.",
                "Añadí mapas embebidos para ubicación de tiendas y zonas de entrega.",
                "Optimicé el rendimiento para tiempos de carga rápidos.",
                "Desplegué en Netlify con CI/CD para actualizaciones automatizadas."
            ],
            "images": [
                "/assets/fastmeals-project/photo-2.webp",
                "/assets/fastmeals-project/photo-1.webp",
                "/assets/fastmeals-project/photo-5.webp",
                "/assets/fastmeals-project/photo-6.webp",
                "/assets/fastmeals-project/photo-7.webp",
                "/assets/fastmeals-project/photo-8.webp"
            ],
            "projectLink": "https://fastmeals.com",
            "nameButton": "Proyecto privado"
        }
    },
    "tech_tests": {
        "title": "Pruebas Técnicas",
        "description": "Aquí están algunas pruebas técnicas que he desarrollado, incluyendo código, despliegue y una explicación detallada en video.",
        "tests": {
            "task_manager": {
                "title": "Gestión de Tareas - Angular & .NET",
                "description": "Este proyecto es una aplicación fullstack desarrollada con Angular 19 y .NET 8, diseñada para la gestión eficiente de tareas. Implementa NgRx Signals para la gestión de estado, formularios reactivos con validaciones avanzadas y un backend en .NET 8 con SQL Server, utilizando Entity Framework Core como ORM. Además, el frontend está desplegado en Netlify y el backend en Somee, demostrando experiencia en despliegue de aplicaciones en producción.",
                "cover": "/assets/task-manager.webp",
                "technologies": [
                    "Angular 19 (Componentes Standalone)",
                    "NgRx Signals (Gestión de Estado)",
                    "TypeScript",
                    "Formularios Reactivos con Validaciones Avanzadas",
                    "Tailwind CSS",
                    "Angular Material",
                    "Pruebas Unitarias (Karma & Jasmine)",
                    "Backend en .NET 8",
                    "Entity Framework Core (ORM)",
                    "SQL Server",
                    "Docker (Base de Datos en Local)",
                    "Despliegue en Netlify (Frontend)",
                    "Despliegue en Somee (Backend)"
                ],
                "video": "https://youtu.be/dWlJ4tvM4jo",
                "repo": "https://github.com/JohnAchicaizaG/frontend-smart-talent-25006",
                "repoback": "https://github.com/JohnAchicaizaG/backend-smart-talent-25006",
                "demo": "https://frontend-prueba-tecnica-smart-talent.netlify.app/",
                "nameButton": "Ver Prueba",
                "nameButtonGTF": "Código Frontend",
                "nameButtonGTB": "Código Backend",
                "nameButtonYT": "Ver en YouTube"
            },
            "booking_system": {
                "title": "Gestor de Tareas con Habilidades - Angular & NgRx",
                "description": "Esta aplicación web, desarrollada en Angular 16 con NgRx para gestión de estado, permite crear, asignar y gestionar tareas con personas y habilidades asociadas. Diseñada como una prueba técnica, la aplicación demuestra el uso de formularios reactivos avanzados, filtrado de datos, validaciones estrictas y pruebas unitarias con Jasmine y Karma.",
                "cover": "/assets/velaio-todo.webp",
                "technologies": [
                    "Angular 16",
                    "NgRx (Gestión de Estado)",
                    "TypeScript",
                    "Formularios Reactivos",
                    "Validaciones Avanzadas",
                    "Filtros Dinámicos",
                    "Arquitectura Modular",
                    "Pruebas Unitarias (Jasmine & Karma)",
                    "Tailwind CSS",
                    "Angular Material",
                    "Responsive Desing"
                ],
                "video": "https://www.youtube.com/watch?v=DyvC6rx1t1Y",
                "repo": "https://github.com/JohnAchicaizaG/Velaio-TODO",
                "demo": "https://unrivaled-banoffee-387b69.netlify.app/",
                "nameButton": "Ver Prueba",
                "nameButtonGTF": "Código Frontend",
                "nameButtonYT": "Ver en YouTube"
            },
            "coordinadora_project": {
                "title": "Coordinadora - Fullstack React & Node.js",
                "description": "Este proyecto es una aplicación fullstack desarrollada como prueba técnica para Coordinadora Mercantil. El frontend está construido con React 19, utilizando Redux Toolkit para la gestión de estado, React Router para navegación y React Hook Form con validaciones avanzadas mediante Zod. Se aplicó Clean Architecture y TypeScript en ambos lados del stack. El backend fue desarrollado con Express y Node.js, documentado con Swagger y estructurado con principios SOLID. Además, se integraron funcionalidades en tiempo real usando Socket.IO y Redis. La base de datos es MySQL, optimizada para consultas avanzadas y con autenticación basada en JWT. El sistema incluye Docker para desarrollo local, ESLint, Prettier y pruebas unitarias con Jest en frontend y backend. El despliegue fue realizado en Netlify (frontend) y Railway (backend).",
                "cover": "/assets/coordinadora-project.webp",
                "technologies": [
                    "React 19",
                    "Redux Toolkit (Gestión de Estado)",
                    "React Router DOM",
                    "React Hook Form + Zod",
                    "Socket.IO (Eventos en Tiempo Real)",
                    "Redis (Optimización de Estado)",
                    "TypeScript (Frontend y Backend)",
                    "Clean Architecture",
                    "Swagger (Documentación API)",
                    "JSDoc (Documentación del Código)",
                    "MySQL (Base de Datos)",
                    "Docker (Entorno de Desarrollo)",
                    "JWT (Autenticación)",
                    "Axios (Cliente HTTP)",
                    "Material UI",
                    "Tailwind CSS",
                    "Recharts (Gráficas de Datos)",
                    "Express (Backend)",
                    "ESLint y Prettier",
                    "Pruebas Unitarias con Jest (Frontend y Backend)",
                    "Morgan (Middleware de Logs)",
                    "Despliegue en Netlify (Frontend)",
                    "Despliegue en Railway (Backend)"
                ],
                "video": "https://youtu.be/P9flET8PxLU",
                "repo": "https://github.com/JohnAchicaizaG/coordinadora-envios-frontend",
                "repoback": "https://github.com/JohnAchicaizaG/coordinadora-envios-backend",
                "demo": "https://coordinadora-prueba-tecnica.netlify.app/",
                "nameButton": "Ver Prueba",
                "nameButtonGTF": "Código Frontend",
                "nameButtonGTB": "Código Backend",
                "nameButtonYT": "Ver en YouTube"
            }
        }
    },
    "footer": "John Chicaiza, Transformando ideas en código"
}